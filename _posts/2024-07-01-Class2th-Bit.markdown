---
layout: post
title: Bit
category: c# grammar
---

## 비트


데이터를 나타내는 최소의 단위이며, 0 또는 1의 조합으로
논리 계산을 수행하는 단위입니다.

메모리는 비트 단위로 데이터를 저장할 수 있으며, 1개의 비트에는
0 또는 1의 값만 저장할 수 있습니다.

### 10진수를 2진수로 변환하는 과정

10 진수를 1이 될 때까지 계속 2로 나누어 준 다음
나눈 위치의 나머지 값을 아래에서 위로 순서대로 정렬합니다.

23을 2진수로
23 / 2 1
11 / 2 1
5 / 2 1
2 / 2 0
1
0001 0111

### 2진수를 10진수로 변환하는 과정

1 byte에 2진수로 저장된 값을 2의 제곱으로 나타내며,
각각의 비트에 1이 있다면 1과 2의 제곱의 위치를 졔산한 다음
각각의 비트를 모두 더하여 10진수로 나타냅니다.

00001111
8 + 4 + 2 + 1 = 15

### 실수 형태의 10진수를 2진수로 변환하는 방법

10진수 실수 부분을 1.0이 될 때까지 계속 2로 곱한 다음
결과의 정수 부분을 위에서 아래로 순서대로 정렬합니다.

~~~c#
float data = 3.2555555f;
double value = 3.2555555555555555555;

Console.WriteLine("data 변수의 값 : " + data);
Console.WriteLine("value 변수의 값 : " + value);
~~~

4 byte 크기의 실수형 자료형은 소수점 이하 6자리까지만 표기하며,
8 byte 크기의 실수형 자료형은 소수점 이하 15자리까지만 정확도를 표기합니다.

_1.정규화_

111.01-> 1.1101 ^ 2

_2.bias_

1.1101 ^ 2 127 + 2 지수
0.1101 가수

- - -

## 비트 연산자


비트 단위로 논리 연산을 수행하기 위해 사용하는 연산자입니다.

int a = 15; // 0000 1111
int b = 10; // 0000 1010

### *AND연산자*

두개의 피 연산자가 모두 1이면 1을 반환하는 연산자입니다.
AND     0000 1111
        0000 1010
result  0000 1010

### *OR연산자*

두개의 피연산자 중에 하나라도 1이 있다면 1을 반환하는 연산자입니다.
OR      0000 1111
        0000 1010
result  0000 1111

### *XOR연산자*

두개의 피연산자가 서로 같으면 0을 반환하고, 서로 다르면 1을 반환하는 연산자입니다.
XOR     0000 1111
        0000 1010
result  0000 0101

### *NOT연산자*

비트의 값을 반전시키는 연산자입니다.
NOT 0000 1111
    1111 0000


## 시프트 연산자


0과 1로 이루어진 2진수를 왼쪽 또는 오른쪽으로
원하는 자리만큼 이동하는 연산자입니다.

~~~c#
int money = 10; // 0000 1010
Console.WriteLine("money 변수를 왼쪽으로 2번 shift 연산한 결과" + (money << 2));
Console.WriteLine("money 변수를 오른쪽으로 2번 shift 연산한 결과" + (money >> 2));
~~~
